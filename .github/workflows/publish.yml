name: Release

on:
  workflow_dispatch:

jobs:
  release_app:
    name: 'Release App'
    timeout-minutes: 40
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        name: Gradle Cache
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*') }}-v1

      - name: Configure JDK 1.11
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11" # ubuntu-latest is about to default to 11, force it everywhere

      - name: Verify JDK11
        # Default JDK varies depending on different runner flavors, make sure we are on 11
        # Run a check that exits with error unless it is 11 version to future-proof against unexpected upgrades
        run: java -fullversion 2>&1 | grep '11.0'
        shell: bash

      - name: Install Release Utilities
        run: |
          mkdir ~/bin/
          curl -L -o ~/bin/github-release.bz2 https://github.com/github-release/github-release/releases/download/v0.10.0/linux-amd64-github-release.bz2
          cd ~/bin
          bunzip2 github-release.bz2
          chmod 755 ~/bin/github-release
          sudo chown -R $USER /var/lib/gems/
          sudo chown -R $USER /usr/local/bin
          gem install asciidoctor
        shell: bash

      - name: GIT Setup
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git remote set-url origin git@github.com:$GITHUB_REPOSITORY
        shell: bash

      - name: Credential Prep
        run: |
          echo "KSTOREPWD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEYPWD=${{ secrets.KEYSTORE_KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "TAG=js-addons-v1.0.2" >> $GITHUB_ENV
          mkdir ~/src
          echo "${{ secrets.RELEASES_PUBLISH_TOKEN }}" | base64 -d > ~/src/my-github-personal-access-token.gz
          echo "${{ secrets.KEYSTORE }}" | base64 -d > ~/src/android-keystore.gz
          cd ~/src
          gunzip *gz
        shell: bash

      - name: Build and Release
        run: ./gradlew assembleDebug
